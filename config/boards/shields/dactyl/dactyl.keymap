#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3


&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};
/ {
     macros {
        lshiftAlt: lshiftAlt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LALT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHFT &kp LALT>
                ;
        };

        ctrlShiftAltWin: ctrlShiftAltWin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHFT &kp LALT &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LCTRL &kp LSHFT &kp LALT &kp LGUI>
                ;
        };
    };

    behaviors {
        lshiftAltHoldTap: lshiftAltHoldTap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&lshiftAlt>, <&kp>;
        };

        ctrlShiftAltWinHoldTap: ctrlShiftAltWinHoldTap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&ctrlShiftAltWin>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp CAPS       &kp N1        &kp N2   &kp N3         &kp N4   &kp N5                                        &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp BT_CLR
                &lt LWR TAB    &kp Q         &kp W    &kp E          &kp R    &kp T                                         &kp Y  &kp U  &kp I     &kp O   &kp P    &kp EQUAL
                &mt LCTRL RET  &kp A         &kp S    &kp D          &kp F    &kp G                                         &kp H  &kp J  &kp K     &kp L   &lshiftAltHoldTap SEMI SEMI &ctrlShiftAltWinHoldTap SQT SQT
                &mt LSHIFT ESC &mt LSHIFT Z  &kp X    &kp C          &kp V    &kp B                                         &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                               &kp INS       &kp LGUI &mt LALT BSPC  &kp SPACE                                              &lt LWR RET   &kp BSPC  &to LWR &to RSE
                                                                     &kp RIGHT  &kp LEFT                          &kp DOWN  &kp UP
                                                                     &none      &kp DEL                           &kp LGUI  &kp LSHIFT
            >;
        };

        lower_layer {
            bindings = < 
                &trans         &trans &trans &trans   &trans         &bootloader                                            &bootloader  &trans   &trans   &trans &trans    &trans
                &lt LWR TAB    &kp Q         &kp W    &kp E          &kp R    &kp T                                         &kp Y  &kp U  &kp I     &kp O   &kp P    &kp EQUAL
                &mt LCTRL RET  &kp A         &kp S    &kp D          &kp F    &kp G                                         &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &mt LSHIFT ESC &mt LSHIFT Z  &kp X    &kp C          &kp V    &kp B                                         &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                               &kp INS       &kp LGUI &mt LALT BSPC  &kp SPACE                                              &lt LWR RET   &kp BSPC  &to LWR &to RSE
                                                                     &kp RIGHT  &kp LEFT                          &kp DOWN  &kp UP
                                                                     &none      &kp DEL                           &kp LGUI  &kp LSHIFT
            >;
        };

        raise_layer {
            bindings = <
                &trans  &trans &trans &trans &trans &trans                         &bootloader &trans &trans &trans &trans &kp K_VOL_UP
                &trans  &trans &trans &trans &trans &trans                              &trans &trans &trans &trans &trans &kp K_VOL_UP
                &trans  &trans &trans &trans &trans &trans                              &trans &trans &trans &trans &trans &kp K_VOL_DN
                &trans  &trans &trans &trans &trans &trans                              &trans &trans &trans &trans &trans &kp K_MUTE
                               &trans &trans &trans &trans                              &trans &trans &trans &trans
                                                    &mo ADJ &trans               &trans &trans
                                                    &trans  &trans               &trans &trans
            >;
        };

        adjust_layer {
            bindings = <
                &none &bt BT_SEL 1 &out OUT_USB &none &none  &none                     &none       &none  &none &none &none &none
                &none &bt BT_SEL 1 &out OUT_USB &none &none  &none                     &none       &none  &none &none &none &none
                &none &bt BT_SEL 2 &none        &none &none  &none                    &none       &none  &none &none &none &none
                &none &bt BT_SEL 3 &bt BT_CLR   &none &none  &bootloader              &bootloader &none  &none &none &none &none
                                   &none        &none &none  &none                    &none       &none  &none &none
                                                             &none  &none       &none &none
                                                             &none  &none       &none &none
            >;
        };
    };
};